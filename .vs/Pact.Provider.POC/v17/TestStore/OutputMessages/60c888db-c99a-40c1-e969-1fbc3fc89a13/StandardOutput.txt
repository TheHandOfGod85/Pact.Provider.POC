Starting verification...
Pact verification failed

Verifier Output
---------------
The pact at http://127.0.0.1:8000/pacts/provider/DotNet-API/consumer/NextJS-Client/pact-version/38cb675dc8a1d94a9d3ed91d32aa54a3d7f1a2bd is being verified because the pact content belongs to the consumer version matching the following criterion:
    * latest version of NextJS-Client from the main branch 'master' (1.0.1)

Verifying a pact between NextJS-Client and DotNet-API

  a request for the user by id (184ms loading, 148ms verification)
     Given there is a user
    returns a response which
      has status code 200 (OK)
      includes headers
        "Content-Type" with value "application/json" (OK)
      has a matching body (FAILED)


Failures:

1) Verifying a pact between NextJS-Client and DotNet-API Given there is a user - a request for the user by id
    1.1) has a matching body
           $ -> Expected {"id":"1","name":"\"John Doe\""} to be equal to {"gender":"\"M\"","id":"1","name":"\"John Doe\""}
           $ -> Actual map is missing the following keys: gender
    {
    -  "gender": "M",
      "id": 1,
  "name": "John Doe"
}


There were 1 pact failures

Verifier Logs
-------------
2025-02-10T10:53:02.257225Z  INFO ThreadId(01) pact_verifier::pact_broker: Fetching path '' from pact broker
2025-02-10T10:53:02.257284Z DEBUG ThreadId(01) pact_verifier::pact_broker: Final broker URL: http://127.0.0.1:8000/
2025-02-10T10:53:02.257424Z DEBUG ThreadId(01) reqwest::connect: starting new connection: http://127.0.0.1:8000/    
2025-02-10T10:53:02.257458Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connecting to 127.0.0.1:8000
2025-02-10T10:53:02.258419Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connected to 127.0.0.1:8000
2025-02-10T10:53:02.273639Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.273833Z DEBUG ThreadId(01) pact_verifier::pact_broker: Link URL is templated
2025-02-10T10:53:02.273849Z DEBUG ThreadId(01) pact_verifier::pact_broker: templated URL = http://127.0.0.1:8000/pacts/provider/{provider}/for-verification
2025-02-10T10:53:02.275626Z DEBUG ThreadId(01) pact_verifier::pact_broker: final URL = http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:53:02.275711Z  INFO ThreadId(01) pact_verifier::pact_broker: Fetching path '/pacts/provider/DotNet-API/for-verification' from pact broker
2025-02-10T10:53:02.275717Z DEBUG ThreadId(01) pact_verifier::pact_broker: Final broker URL: http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:53:02.275745Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: reuse idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.325117Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.325255Z DEBUG ThreadId(01) pact_verifier::pact_broker: templated URL = http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:53:02.326693Z DEBUG ThreadId(01) pact_verifier::pact_broker: final URL = http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:53:02.326764Z DEBUG ThreadId(01) pact_verifier::pact_broker: Sending JSON to http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification using POST: {"includePendingStatus":false,"consumerVersionSelectors":[]}
2025-02-10T10:53:02.326811Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: reuse idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.416938Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.417096Z  INFO ThreadId(01) pact_verifier::pact_broker: Fetching path '/pacts/provider/DotNet-API/consumer/NextJS-Client/pact-version/38cb675dc8a1d94a9d3ed91d32aa54a3d7f1a2bd/metadata/c1tdW2N2XT0xMA' from pact broker
2025-02-10T10:53:02.417111Z DEBUG ThreadId(01) pact_verifier::pact_broker: Final broker URL: http://127.0.0.1:8000/pacts/provider/DotNet-API/consumer/NextJS-Client/pact-version/38cb675dc8a1d94a9d3ed91d32aa54a3d7f1a2bd/metadata/c1tdW2N2XT0xMA
2025-02-10T10:53:02.417131Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: reuse idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.431749Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:53:02.436926Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Executing provider states
2025-02-10T10:53:02.436967Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Running setup provider state change handler 'there is a user' for 'a request for the user by id'
2025-02-10T10:53:02.441228Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Sending HTTP Request ( method: POST, path: /, query: None, headers: Some({"Content-Type": ["application/json"]}), body: Present(56 bytes, application/json) ) to state change handler
2025-02-10T10:53:02.441349Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: reqwest::connect: starting new connection: http://localhost:5000/    
2025-02-10T10:53:02.450762Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::connect::http: connecting to [::1]:5000
2025-02-10T10:53:02.451203Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::connect::http: connected to [::1]:5000
2025-02-10T10:53:02.561882Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::pool: pooling idle connection for ("http", localhost:5000)
2025-02-10T10:53:02.561919Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: State change request: Response { url: "http://localhost:5000/provider-states", status: 200, headers: {"date": "Mon, 10 Feb 2025 10:53:02 GMT", "server": "Kestrel", "transfer-encoding": "chunked"} }
2025-02-10T10:53:02.561959Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: State Change: "ProviderState { name: "there is a user", params: {} }" -> Ok({})
2025-02-10T10:53:02.561979Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Running provider verification for 'a request for the user by id'
2025-02-10T10:53:02.561996Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Verifying a HTTP interaction
2025-02-10T10:53:02.562043Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Sending request to provider at http://localhost:5000/
2025-02-10T10:53:02.562045Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Provider details = ProviderInfo { name: "DotNet-API", protocol: "http", host: "localhost", port: Some(5000), path: "/", transports: [ProviderTransport { transport: "http", port: Some(5000), path: Some("/"), scheme: Some("http") }] }
2025-02-10T10:53:02.562052Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Sending request HTTP Request ( method: GET, path: /user, query: Some({"id": [Some("1")]}), headers: Some({"Accept": ["application/json"]}), body: Missing )
2025-02-10T10:53:02.562060Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: body:

2025-02-10T10:53:02.562104Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::pool: reuse idle connection for ("http", localhost:5000)
2025-02-10T10:53:02.579475Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Received native response: Response { url: "http://localhost:5000/user?id=1", status: 200, headers: {"content-type": "application/json; charset=utf-8", "date": "Mon, 10 Feb 2025 10:53:02 GMT", "server": "Kestrel", "transfer-encoding": "chunked"} }
2025-02-10T10:53:02.579741Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Received response: HTTP Response ( status: 200, headers: Some({"date": ["Mon, 10 Feb 2025 10:53:02 GMT"], "content-type": ["application/json; charset=utf-8"], "server": ["Kestrel"], "transfer-encoding": ["chunked"]}), body: Present(26 bytes, application/json;charset=utf-8) )
2025-02-10T10:53:02.579767Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: body:
{"id":1,"name":"John Doe"}
2025-02-10T10:53:02.579806Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: comparing to expected response: HTTP Response ( status: 200, headers: Some({"Content-Type": ["application/json"]}), body: Present(39 bytes, application/json) )
2025-02-10T10:53:02.579830Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: expected content type = 'application/json', actual content type = 'application/json;charset=utf-8'
2025-02-10T10:53:02.579910Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: content type header matcher = 'RuleList { rules: [], rule_logic: And, cascaded: false }'
2025-02-10T10:53:02.579920Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_plugin_driver::catalogue_manager: Looking for a content matcher for application/json
2025-02-10T10:53:02.580376Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: No content matcher defined for content type 'application/json', using core matcher implementation
2025-02-10T10:53:02.580382Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: Using body matcher for content type 'application/json'
2025-02-10T10:53:02.580396Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare: Comparing path $
2025-02-10T10:53:02.580401Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_maps: Comparing maps at $: {"gender": String("M"), "id": Number(1), "name": String("John Doe")} -> {"id": Number(1), "name": String("John Doe")}
2025-02-10T10:53:02.580420Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_maps: Matcher is defined for path $
2025-02-10T10:53:02.580428Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::matchingrules: map -> map: comparing [String -> serde_json::value::Value] to [String -> serde_json::value::Value] using Equality
2025-02-10T10:53:02.580443Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::matchingrules: Comparing '{"gender": String("M"), "id": Number(1), "name": String("John Doe")}' to '{"id": Number(1), "name": String("John Doe")}' using Equality -> Err(Expected {"id":"1","name":"\"John Doe\""} to be equal to {"gender":"\"M\"","id":"1","name":"\"John Doe\""})
2025-02-10T10:53:02.580483Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare: Comparing path $.id
2025-02-10T10:53:02.580489Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Calling match_values for path $.id
2025-02-10T10:53:02.580496Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: JSON -> JSON: Comparing '1' to '1' using Equality -> Ok(())
2025-02-10T10:53:02.580500Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Comparing 'Number(1)' to 'Number(1)' at path '$.id' -> Ok(())
2025-02-10T10:53:02.580503Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare: Comparing path $.name
2025-02-10T10:53:02.580506Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Calling match_values for path $.name
2025-02-10T10:53:02.580508Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: JSON -> JSON: Comparing '"John Doe"' to '"John Doe"' using Equality -> Ok(())
2025-02-10T10:53:02.580509Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Comparing 'String("John Doe")' to 'String("John Doe")' at path '$.name' -> Ok(())
2025-02-10T10:53:02.580753Z  WARN ThreadId(01) pact_matching::metrics: 

Please note:
We are tracking events anonymously to gather important usage statistics like Pact version and operating system. To disable tracking, set the 'PACT_DO_NOT_TRACK' environment variable to 'true'.


2025-02-10T10:53:02.580827Z DEBUG ThreadId(01) pact_matching::metrics: Sending event to GA - {"t": "event", "av": "5.0.0.0", "v": "1", "tid": "UA-117778936-1", "ec": "ProviderTest", "cd2": "unknown", "cid": "84828f847e1903ad1eaccc79068cc4b3", "ea": "Completed", "cd3": "windows-x86_64", "ds": "client", "aid": "pact-net", "an": "pact-net", "cd7": "1.2.8", "cd6": "pact_ffi", "el": "Pacts verified", "aip": "true", "ev": "1"}
2025-02-10T10:53:02.586471Z DEBUG ThreadId(01) reqwest::connect: starting new connection: https://www.google-analytics.com/    
2025-02-10T10:53:02.603764Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connecting to 172.217.16.238:443
2025-02-10T10:53:02.616882Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connected to 172.217.16.238:443
2025-02-10T10:53:02.731589Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("https", www.google-analytics.com)
2025-02-10T10:53:02.731840Z DEBUG ThreadId(01) pact_plugin_driver::plugin_manager: Shutting down all plugins

