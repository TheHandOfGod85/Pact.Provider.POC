Starting verification...
Pact verification successful

Verifier Output
---------------
The pact at http://127.0.0.1:8000/pacts/provider/DotNet-API/consumer/NextJS-Client/pact-version/bb2c5b15e280dc1a2a0d12fec7f4731d4b44411d is being verified because the pact content belongs to the consumer version matching the following criterion:
    * latest version of NextJS-Client from the main branch 'master' (1.0.0)

Verifying a pact between NextJS-Client and DotNet-API

  a request for the user by id (669ms loading, 284ms verification)
     Given there is a user
    returns a response which
      has status code 200 (OK)
      includes headers
        "Content-Type" with value "application/json" (OK)
      has a matching body (OK)


Verifier Logs
-------------
2025-02-10T10:31:26.719351Z  INFO ThreadId(01) pact_verifier::pact_broker: Fetching path '' from pact broker
2025-02-10T10:31:26.719687Z DEBUG ThreadId(01) pact_verifier::pact_broker: Final broker URL: http://127.0.0.1:8000/
2025-02-10T10:31:26.720221Z DEBUG ThreadId(01) reqwest::connect: starting new connection: http://127.0.0.1:8000/    
2025-02-10T10:31:26.720303Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connecting to 127.0.0.1:8000
2025-02-10T10:31:26.721639Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connected to 127.0.0.1:8000
2025-02-10T10:31:26.807815Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:26.808167Z DEBUG ThreadId(01) pact_verifier::pact_broker: Link URL is templated
2025-02-10T10:31:26.808181Z DEBUG ThreadId(01) pact_verifier::pact_broker: templated URL = http://127.0.0.1:8000/pacts/provider/{provider}/for-verification
2025-02-10T10:31:26.811433Z DEBUG ThreadId(01) pact_verifier::pact_broker: final URL = http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:31:26.811556Z  INFO ThreadId(01) pact_verifier::pact_broker: Fetching path '/pacts/provider/DotNet-API/for-verification' from pact broker
2025-02-10T10:31:26.811564Z DEBUG ThreadId(01) pact_verifier::pact_broker: Final broker URL: http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:31:26.811604Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: reuse idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:27.211912Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:27.212107Z DEBUG ThreadId(01) pact_verifier::pact_broker: templated URL = http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:31:27.213766Z DEBUG ThreadId(01) pact_verifier::pact_broker: final URL = http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification
2025-02-10T10:31:27.213917Z DEBUG ThreadId(01) pact_verifier::pact_broker: Sending JSON to http://127.0.0.1:8000/pacts/provider/DotNet-API/for-verification using POST: {"includePendingStatus":false,"consumerVersionSelectors":[]}
2025-02-10T10:31:27.213977Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: reuse idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:27.294627Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:27.294840Z  INFO ThreadId(01) pact_verifier::pact_broker: Fetching path '/pacts/provider/DotNet-API/consumer/NextJS-Client/pact-version/bb2c5b15e280dc1a2a0d12fec7f4731d4b44411d/metadata/c1tdW2N2XT05' from pact broker
2025-02-10T10:31:27.294851Z DEBUG ThreadId(01) pact_verifier::pact_broker: Final broker URL: http://127.0.0.1:8000/pacts/provider/DotNet-API/consumer/NextJS-Client/pact-version/bb2c5b15e280dc1a2a0d12fec7f4731d4b44411d/metadata/c1tdW2N2XT05
2025-02-10T10:31:27.294879Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: reuse idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:27.367872Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("http", 127.0.0.1:8000)
2025-02-10T10:31:27.375482Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Executing provider states
2025-02-10T10:31:27.375572Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Running setup provider state change handler 'there is a user' for 'a request for the user by id'
2025-02-10T10:31:27.381047Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Sending HTTP Request ( method: POST, path: /, query: None, headers: Some({"Content-Type": ["application/json"]}), body: Present(56 bytes, application/json) ) to state change handler
2025-02-10T10:31:27.381162Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: reqwest::connect: starting new connection: http://localhost:5000/    
2025-02-10T10:31:27.392810Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::connect::http: connecting to [::1]:5000
2025-02-10T10:31:27.393292Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::connect::http: connected to [::1]:5000
2025-02-10T10:31:27.615683Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::pool: pooling idle connection for ("http", localhost:5000)
2025-02-10T10:31:27.615785Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: State change request: Response { url: "http://localhost:5000/provider-states", status: 200, headers: {"date": "Mon, 10 Feb 2025 10:31:26 GMT", "server": "Kestrel", "transfer-encoding": "chunked"} }
2025-02-10T10:31:27.615916Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: State Change: "ProviderState { name: "there is a user", params: {} }" -> Ok({})
2025-02-10T10:31:27.616024Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Running provider verification for 'a request for the user by id'
2025-02-10T10:31:27.616150Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier: Verifying a HTTP interaction
2025-02-10T10:31:27.616241Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Sending request to provider at http://localhost:5000/
2025-02-10T10:31:27.616246Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Provider details = ProviderInfo { name: "DotNet-API", protocol: "http", host: "localhost", port: Some(5000), path: "/", transports: [ProviderTransport { transport: "http", port: Some(5000), path: Some("/"), scheme: Some("http") }] }
2025-02-10T10:31:27.616264Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Sending request HTTP Request ( method: GET, path: /user, query: Some({"id": [Some("1")]}), headers: Some({"Accept": ["application/json"]}), body: Missing )
2025-02-10T10:31:27.616285Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: body:

2025-02-10T10:31:27.616396Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: hyper_util::client::legacy::pool: reuse idle connection for ("http", localhost:5000)
2025-02-10T10:31:27.650517Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Received native response: Response { url: "http://localhost:5000/user?id=1", status: 200, headers: {"content-type": "application/json; charset=utf-8", "date": "Mon, 10 Feb 2025 10:31:27 GMT", "server": "Kestrel", "transfer-encoding": "chunked"} }
2025-02-10T10:31:27.650818Z  INFO ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: Received response: HTTP Response ( status: 200, headers: Some({"date": ["Mon, 10 Feb 2025 10:31:27 GMT"], "server": ["Kestrel"], "content-type": ["application/json; charset=utf-8"], "transfer-encoding": ["chunked"]}), body: Present(26 bytes, application/json;charset=utf-8) )
2025-02-10T10:31:27.650852Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_verifier::provider_client: body:
{"id":1,"name":"John Doe"}
2025-02-10T10:31:27.650972Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: comparing to expected response: HTTP Response ( status: 200, headers: Some({"Content-Type": ["application/json"]}), body: Present(26 bytes, application/json) )
2025-02-10T10:31:27.651122Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: expected content type = 'application/json', actual content type = 'application/json;charset=utf-8'
2025-02-10T10:31:27.651454Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: content type header matcher = 'RuleList { rules: [], rule_logic: And, cascaded: false }'
2025-02-10T10:31:27.651526Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_plugin_driver::catalogue_manager: Looking for a content matcher for application/json
2025-02-10T10:31:27.652890Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: No content matcher defined for content type 'application/json', using core matcher implementation
2025-02-10T10:31:27.652955Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching: Using body matcher for content type 'application/json'
2025-02-10T10:31:27.652996Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare: Comparing path $
2025-02-10T10:31:27.653008Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_maps: Comparing maps at $: {"id": Number(1), "name": String("John Doe")} -> {"id": Number(1), "name": String("John Doe")}
2025-02-10T10:31:27.653059Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_maps: Matcher is defined for path $
2025-02-10T10:31:27.653085Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::matchingrules: map -> map: comparing [String -> serde_json::value::Value] to [String -> serde_json::value::Value] using Equality
2025-02-10T10:31:27.653104Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::matchingrules: Comparing '{"id": Number(1), "name": String("John Doe")}' to '{"id": Number(1), "name": String("John Doe")}' using Equality -> Ok(())
2025-02-10T10:31:27.653192Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare: Comparing path $.id
2025-02-10T10:31:27.653200Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Calling match_values for path $.id
2025-02-10T10:31:27.653221Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: JSON -> JSON: Comparing '1' to '1' using Equality -> Ok(())
2025-02-10T10:31:27.653226Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Comparing 'Number(1)' to 'Number(1)' at path '$.id' -> Ok(())
2025-02-10T10:31:27.653232Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare: Comparing path $.name
2025-02-10T10:31:27.653237Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Calling match_values for path $.name
2025-02-10T10:31:27.653242Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: JSON -> JSON: Comparing '"John Doe"' to '"John Doe"' using Equality -> Ok(())
2025-02-10T10:31:27.653246Z DEBUG ThreadId(01) verify_interaction{interaction="a request for the user by id"}: pact_matching::json: compare_values: Comparing 'String("John Doe")' to 'String("John Doe")' at path '$.name' -> Ok(())
2025-02-10T10:31:27.653818Z  WARN ThreadId(01) pact_matching::metrics: 

Please note:
We are tracking events anonymously to gather important usage statistics like Pact version and operating system. To disable tracking, set the 'PACT_DO_NOT_TRACK' environment variable to 'true'.


2025-02-10T10:31:27.653892Z DEBUG ThreadId(01) pact_matching::metrics: Sending event to GA - {"av": "5.0.0.0", "cd6": "pact_ffi", "ec": "ProviderTest", "an": "pact-net", "cd2": "unknown", "t": "event", "el": "Pacts verified", "aip": "true", "ds": "client", "v": "1", "ea": "Completed", "aid": "pact-net", "tid": "UA-117778936-1", "cd7": "1.2.8", "ev": "1", "cd3": "windows-x86_64", "cid": "84828f847e1903ad1eaccc79068cc4b3"}
2025-02-10T10:31:27.662936Z DEBUG ThreadId(01) reqwest::connect: starting new connection: https://www.google-analytics.com/    
2025-02-10T10:31:27.679931Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connecting to 172.217.16.238:443
2025-02-10T10:31:27.693443Z DEBUG ThreadId(01) hyper_util::client::legacy::connect::http: connected to 172.217.16.238:443
2025-02-10T10:31:27.803283Z DEBUG ThreadId(01) hyper_util::client::legacy::pool: pooling idle connection for ("https", www.google-analytics.com)
2025-02-10T10:31:27.803526Z DEBUG ThreadId(01) pact_plugin_driver::plugin_manager: Shutting down all plugins

